/*
# vim: ts=2 sw=2 et
*/
#define PERL_NO_GET_CONTEXT
#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

#include "ppport.h"

#include <assert.h>

#include "nested_sub_check.h"
#include "candidate_cvs.h"
#include "api_helpers.h"

%module{B::LexicalOpTreeHack};
%package{B::LexicalOpTreeHack};

%{

BOOT:
  define_constants(aTHX);
  init_nested_sub_check(aTHX);
  init_candidate_structures(aTHX);

  if (!PL_main_start) {
    SV *hook = (SV *) get_cv("B::LexicalOpTreeHack::global_check_hook", 0);
    if (!PL_checkav)
      PL_checkav = newAV();
    av_unshift(PL_checkav, 1);

    if (av_store(PL_checkav, 0, hook))
      SvREFCNT_inc(hook);
  }


void
global_check_hook()
  CODE:
    process_candidate_cvs(aTHX);

%}

%name{register} void register_hint(const char *hint, SV *callback)
  %code{% register_hint(aTHX_ hint, callback); %};

%name{enable} void enable_hint(const char *hint, bool enable)
  %code{% enable_hint(aTHX_ hint, enable); %};

%name{B::LexicalOpTreeHack::HintedCode} class HintedCode
{
  %accessors{
    %get_style{no_prefix};
  };

  ~HintedCode();

  CV *cv %get;
  OP *root %get;
  OP *start %get;
  HintedCodeType type %get;
};
